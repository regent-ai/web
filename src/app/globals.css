@import url('https://unpkg.com/normalize.css') layer(base);
@import "tailwindcss";
@import "tw-animate-css";

@layer normalize, base, demo;

@layer demo {
  h1 {
    --font-level: 5;
    translate: 12px;
    margin: 0;
    margin-bottom: 1rem;
    color: color-mix(in hsl, canvasText, canvas 25%);
  }
  
  .grid {
    display: grid;
    grid-template: repeat(var(--rows, 10), 1fr) / repeat(var(--cols, 10), 1fr);
    font-size: 10rem;
    font-weight: 600;
    line-height: 1;
    font-family: ui-monospace, SFMono-Regular, Menlo, monospace;
    cursor: none;
    width: 100%;
    height: 100%;
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
  }
  
  .grid div {
    padding: 2px;
    opacity: calc(var(--opacity) * 0.5);
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    transition-property: opacity, rotate, filter;
    transition-duration: 2.4s, 2.4s, 0.6s;
    transition-timing-function: ease-in, ease-out, ease-out;
    scale: 1.5;
    filter: grayscale(1);
    color: hsl(var(--hue) 80% 50%);
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
  }
  
  @media(prefers-color-scheme: dark) {
    .grid div {
      opacity: calc(var(--opacity) + 0.2);
    }
  }
  
  .grid div:hover {
    transition-property: opacity, rotate, filter;
    transition-duration: 0s, 0s, 0s !important;
    rotate: calc(var(--grade, 0) * 90deg);
    filter: grayscale(0) brightness(1.5);
    opacity: 1;
  }
  
  [data-theme='dark'] .grid div {
    opacity: calc(var(--opacity) + 0.2);
  }
  
  [data-theme='dark'] .grid div:hover {
    opacity: 1;
  }
  
  @keyframes pulseGreen {
    0%, 100% {
      filter: brightness(1);
    }
    50% {
      filter: brightness(1.8);
    }
  }
  
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  
  .special-cell {
    animation: pulseGreen 1s ease-in-out infinite, spin 4s linear infinite !important;
    color: #39ff14 !important;
  }
  
  @keyframes fadeInTimeline {
    0% {
      opacity: 0.2;
    }
    100% {
      opacity: 1;
    }
  }
  
  @keyframes glitch {
    0%, 100% {
      transform: translate(0);
      text-shadow: 0 0 0;
    }
    10% {
      transform: translate(-1px, 1px);
      text-shadow: -1px 0 #00ffff;
    }
    20% {
      transform: translate(1px, -1px);
      text-shadow: 1px 0 #ff00ff;
    }
    30% {
      transform: translate(-1px, -1px);
      text-shadow: -1px 0 #00ffff;
    }
    40% {
      transform: translate(1px, 1px);
      text-shadow: 1px 0 #ff00ff;
    }
    50% {
      transform: translate(-1px, 1px);
      text-shadow: -1px 0 #00ffff;
    }
    60% {
      transform: translate(1px, -1px);
      text-shadow: 1px 0 #ff00ff;
    }
    70% {
      transform: translate(-1px, -1px);
      text-shadow: -1px 0 #00ffff;
    }
    80% {
      transform: translate(1px, 1px);
      text-shadow: 1px 0 #ff00ff;
    }
    90% {
      transform: translate(-1px, 1px);
      text-shadow: -1px 0 #00ffff;
    }
  }
  
  .glitch-text {
    display: inline-block;
    position: relative;
    animation: glitch 0.15s infinite;
    color: #ff006e;
    font-weight: 700;
  }
  
  @keyframes glitchGreen {
    0%, 100% {
      transform: translate(0);
      text-shadow: 0 0 0;
    }
    10% {
      transform: translate(-1px, 1px);
      text-shadow: -1px 0 #00ff00;
    }
    20% {
      transform: translate(1px, -1px);
      text-shadow: 1px 0 #39ff14;
    }
    30% {
      transform: translate(-1px, -1px);
      text-shadow: -1px 0 #00ff00;
    }
    40% {
      transform: translate(1px, 1px);
      text-shadow: 1px 0 #39ff14;
    }
    50% {
      transform: translate(-1px, 1px);
      text-shadow: -1px 0 #00ff00;
    }
    60% {
      transform: translate(1px, -1px);
      text-shadow: 1px 0 #39ff14;
    }
    70% {
      transform: translate(-1px, -1px);
      text-shadow: -1px 0 #00ff00;
    }
    80% {
      transform: translate(1px, 1px);
      text-shadow: 1px 0 #39ff14;
    }
    90% {
      transform: translate(-1px, 1px);
      text-shadow: -1px 0 #00ff00;
    }
  }
  
  .glitch-text-green {
    display: inline-block;
    position: relative;
    animation: glitchGreen 0.15s infinite;
    color: #39ff14;
    font-weight: 700;
  }
  
  /* Social links card hover effect */
  .social-links-card a {
    transition: transform 0.2s ease-out, opacity 0.2s ease-out;
    display: inline-block;
    cursor: pointer;
  }
  
  .social-links-card a:hover {
    transform: scale(1.2);
    opacity: 0.8;
  }
}

@layer base {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  html {
    color-scheme: light dark;
    overflow: hidden;
    height: 100%;
    width: 100%;
  }

  [data-theme='light'] {
    color-scheme: light only;
  }

  [data-theme='dark'] {
    color-scheme: dark only;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    background: light-dark(#fff, #000);
    display: grid;
    place-items: center;
    min-height: 100vh;
    max-height: 100vh;
    overflow: hidden;
    font-family: var(--font-mondwest), 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  /* Apply Mondwest font to all elements except monospace */
  body *:not(.grid):not(code):not(pre) {
    font-family: var(--font-mondwest), 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  body::before {
    --size: 45px;
    --line: color-mix(in hsl, canvasText, transparent 80%);
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        calc(var(--size) * 0.36) 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 0%
        calc(var(--size) * 0.32) / var(--size) var(--size);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
  }

  /* Utilities */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}
